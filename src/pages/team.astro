---
import Layout from '../layouts/Layout.astro';

const founders = [
  {
    name: "Ashwin Ramesh",
    title: "Founder & CEO",
    expertise: [
      "Software Architecture & Development 🚀",
      "Product Strategy & Innovation 💡",
      "Technical Leadership 👨‍💻",
      "AI & Machine Learning 🤖",
      "Business Development 📈"
    ],
    social: {
      instagram: "theashwinazer",
      spotify: "https://open.spotify.com/artist/6M1VSmwtcuwS1DnvXTGk7P",
      github: "https://github.com/azerxafro",
      facebook: "https://www.facebook.com/ashwinxafro"
    },
    image: "/images/team/ashwin-ramesh.jpg"
  }
];

const interns = [
  {
    name: "Gayathri Eswaran",
    title: "Developer Intern & Team Lead",
    expertise: [
      "AWS Cloud Technical Essentials ☁️",
      "IT Security: Defense Against Digital Dark Arts 🛡️",
      "Generative AI 🎨"
    ],
    social: {
      github: "gayathri",
      linkedin: "gayathri-eswaran"
    },
    image: "/images/team/gayathri-eswaran.jpg"
  }
];
---

<Layout title="Our Squad - Atom">
  <div class="hero">
    <div class="grain-overlay"></div>
    <div class="hero-content">
      <h1 class="gradient-text animate-on-scroll">
        <span class="text-reveal">Meet</span>
        <span class="text-reveal">the</span>
        <span class="text-reveal">Squad</span>
      </h1>
      <p class="subtitle animate-on-scroll">
        <span class="text-reveal">The coolest crew behind Atom's magic ✨</span>
      </p>
    </div>
    <div class="hero-shapes">
      <div class="shape shape-1"></div>
      <div class="shape shape-2"></div>
      <div class="shape shape-3"></div>
      <div class="shape shape-4"></div>
      <div class="shape shape-5"></div>
    </div>
  </div>

  <div class="container">
    <!-- Founders Section -->
    <section class="team-section founders-section">
      <h2 class="section-title animate-on-scroll">The Visionaries</h2>
      <div class="team-grid">
        {founders.map(member => (
          <div class="team-card animate-on-scroll" data-tilt data-tilt-max="5" data-tilt-speed="400" data-tilt-glare data-tilt-max-glare="0.2">
            <div class="card-content">
              <div class="member-image-wrapper">
                <div class="member-image">
                  <div class="image-skeleton"></div>
                  <img 
                    src={member.image} 
                    alt={member.name}
                    width="400"
                    height="400"
                    loading="lazy"
                    onload="this.parentElement.classList.add('loaded')"
                  />
                </div>
                <div class="image-overlay">
                  <span>✨ Founder Vibes ✨</span>
                </div>
              </div>
              <div class="member-info">
                <div class="member-header">
                  <h3>{member.name}</h3>
                  <p class="member-title">{member.title}</p>
                </div>
                
                <div class="expertise">
                  <h4>Superpower Stack</h4>
                  <ul>
                    {member.expertise.map(item => (
                      <li class="expertise-item">
                        <span class="expertise-text">{item}</span>
                        <div class="expertise-hover">
                          <span class="emoji-reaction">🔥</span>
                        </div>
                      </li>
                    ))}
                  </ul>
                </div>

                <div class="social-links">
                  {member.social.instagram && (
                    <button class="social-btn copy-btn" data-username={member.social.instagram}>
                      <span class="social-icon">📸</span>
                      <span class="social-label">@{member.social.instagram}</span>
                      <span class="tooltip">Click to copy</span>
                    </button>
                  )}
                  {member.social.spotify && (
                    <a href={member.social.spotify} target="_blank" rel="noopener noreferrer" class="social-btn">
                      <span class="social-icon">🎵</span>
                      <span class="social-label">Spotify</span>
                    </a>
                  )}
                  {member.social.github && (
                    <button class="social-btn copy-btn" data-username={member.social.github}>
                      <span class="social-icon">💻</span>
                      <span class="social-label">@{member.social.github}</span>
                      <span class="tooltip">Click to copy</span>
                    </button>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Interns Section -->
    <section class="team-section interns-section">
      <h2 class="section-title animate-on-scroll">Rising Stars</h2>
      <div class="team-grid">
        {interns.map(member => (
          <div class="team-card animate-on-scroll" data-tilt data-tilt-max="5" data-tilt-speed="400" data-tilt-glare data-tilt-max-glare="0.2">
            <div class="card-content">
              <div class="member-image-wrapper">
                <div class="member-image">
                  <div class="image-skeleton"></div>
                  <img 
                    src={member.image} 
                    alt={member.name}
                    width="300"
                    height="300"
                    loading="lazy"
                    onload="this.parentElement.classList.add('loaded')"
                  />
                </div>
                <div class="image-overlay">
                  <span>🌟 Future Leader 🌟</span>
                </div>
              </div>
              <div class="member-info">
                <div class="member-header">
                  <h3>{member.name}</h3>
                  <p class="member-title">{member.title}</p>
                </div>
                
                <div class="expertise">
                  <h4>Tech Arsenal</h4>
                  <ul>
                    {member.expertise.map(item => (
                      <li class="expertise-item">
                        <span class="expertise-text">{item}</span>
                        <div class="expertise-hover">
                          <span class="emoji-reaction">🚀</span>
                        </div>
                      </li>
                    ))}
                  </ul>
                </div>

                <div class="social-links">
                  {member.social.github && (
                    <button class="social-btn copy-btn" data-username={member.social.github}>
                      <span class="social-icon">💻</span>
                      <span class="social-label">@{member.social.github}</span>
                      <span class="tooltip">Click to copy</span>
                    </button>
                  )}
                  {member.social.linkedin && (
                    <a href={`https://linkedin.com/in/${member.social.linkedin}`} target="_blank" rel="noopener noreferrer" class="social-btn">
                      <span class="social-icon">💼</span>
                      <span class="social-label">LinkedIn</span>
                    </a>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  </div>

  <div class="fab">
    <button class="fab-button" aria-label="Scroll to top">
      <span>⚡️</span>
    </button>
  </div>
</Layout>

<script>
  import VanillaTilt from 'vanilla-tilt';

  // Initialize tilt effect
  VanillaTilt.init(document.querySelectorAll(".team-card"), {
    max: 5,
    speed: 400,
    glare: true,
    "max-glare": 0.2,
  });

  // Copy to clipboard functionality
  document.querySelectorAll('.copy-btn').forEach(btn => {
    btn.addEventListener('click', async () => {
      const username = btn.getAttribute('data-username');
      if (username) {
        try {
          await navigator.clipboard.writeText(username);
          const tooltip = btn.querySelector('.tooltip');
          if (tooltip) {
            tooltip.textContent = 'Copied!';
            // Trigger haptic feedback if available
            if ('vibrate' in navigator) {
              navigator.vibrate(50);
            }
            setTimeout(() => {
              tooltip.textContent = 'Click to copy';
            }, 2000);
          }
        } catch (err) {
          console.error('Failed to copy:', err);
        }
      }
    });
  });

  // Floating Action Button
  const fab = document.querySelector('.fab-button');
  if (fab) {
    fab.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
      // Trigger haptic feedback
      if ('vibrate' in navigator) {
        navigator.vibrate(50);
      }
    });

    // Show/hide FAB based on scroll position
    let lastScrollTop = 0;
    window.addEventListener('scroll', () => {
      const st = window.pageYOffset || document.documentElement.scrollTop;
      if (st > lastScrollTop && st > 500) {
        fab.classList.add('show');
      } else if (st < 500) {
        fab.classList.remove('show');
      }
      lastScrollTop = st <= 0 ? 0 : st;
    });
  }

  // Intersection Observer for scroll animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view');
      }
    });
  }, {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  });

  document.querySelectorAll('.animate-on-scroll').forEach((el) => {
    observer.observe(el);
  });
</script>

<style>
  /* Hero Section */
  .hero {
    min-height: 80vh;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 4rem var(--container-padding);
  }

  .grain-overlay {
    position: absolute;
    inset: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.15;
    mix-blend-mode: overlay;
    pointer-events: none;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
  }

  .gradient-text {
    font-size: clamp(3rem, 8vw, 5rem);
    font-weight: 900;
    background: linear-gradient(45deg, #fff, var(--accent), #fff);
    background-size: 200% auto;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: shine 5s linear infinite;
    margin-bottom: 1rem;
  }

  @keyframes shine {
    to {
      background-position: 200% center;
    }
  }

  .text-reveal {
    display: inline-block;
    opacity: 0;
    transform: translateY(2rem);
    animation: revealText 0.8s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  }

  .text-reveal:nth-child(2) {
    animation-delay: 0.2s;
  }

  .text-reveal:nth-child(3) {
    animation-delay: 0.4s;
  }

  @keyframes revealText {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 3D Shapes */
  .hero-shapes {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .shape {
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    animation: morphShape 15s infinite;
  }

  .shape-1 {
    width: 300px;
    height: 300px;
    top: -150px;
    left: -150px;
    animation-delay: -5s;
  }

  .shape-2 {
    width: 200px;
    height: 200px;
    bottom: -100px;
    right: -100px;
    animation-delay: -10s;
  }

  .shape-3 {
    width: 150px;
    height: 150px;
    top: 30%;
    left: 20%;
    animation-delay: -15s;
  }

  .shape-4 {
    width: 100px;
    height: 100px;
    top: 60%;
    right: 10%;
    animation-delay: -20s;
  }

  .shape-5 {
    width: 120px;
    height: 120px;
    bottom: 20%;
    left: 10%;
    animation-delay: -25s;
  }

  @keyframes morphShape {
    0%, 100% {
      border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
    25% {
      border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%;
    }
    50% {
      border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%;
    }
    75% {
      border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%;
    }
  }

  /* Team Cards */
  .team-card {
    position: relative;
    transform-style: preserve-3d;
    perspective: 1000px;
  }

  .card-content {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 24px;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 
      0 4px 24px -1px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.1) inset;
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .team-card:hover .card-content {
    transform: translateZ(20px);
    box-shadow: 
      0 8px 32px -2px rgba(0, 0, 0, 0.15),
      0 0 0 2px rgba(255, 255, 255, 0.2) inset;
  }

  /* Image Loading Animation */
  .image-skeleton {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.1)
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  @keyframes shimmer {
    to {
      background-position: -200% 0;
    }
  }

  .member-image.loaded .image-skeleton {
    display: none;
  }

  /* Expertise Items */
  .expertise-item {
    position: relative;
    overflow: hidden;
    cursor: pointer;
  }

  .expertise-hover {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%) scale(0);
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .expertise-item:hover .expertise-hover {
    transform: translateY(-50%) scale(1);
  }

  .emoji-reaction {
    font-size: 1.25rem;
    animation: pop 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  @keyframes pop {
    50% {
      transform: scale(1.2);
    }
  }

  /* Social Buttons */
  .social-btn {
    position: relative;
  }

  .tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-8px);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-size: 0.875rem;
    opacity: 0;
    pointer-events: none;
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .social-btn:hover .tooltip {
    opacity: 1;
    transform: translateX(-50%) translateY(-4px);
  }

  /* Floating Action Button */
  .fab {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 100;
    transform: translateY(100px);
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .fab.show {
    transform: translateY(0);
  }

  .fab-button {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    background: var(--primary);
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .fab-button:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }

  .fab-button:active {
    transform: translateY(-2px);
  }

  /* Mobile Optimizations */
  @media (max-width: 768px) {
    .gradient-text {
      font-size: clamp(2rem, 6vw, 3rem);
    }

    .team-card {
      transform: none !important;
    }

    .expertise-hover {
      display: none;
    }

    .fab {
      bottom: 1rem;
      right: 1rem;
    }
  }

  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .text-reveal,
    .shape,
    .gradient-text,
    .team-card,
    .expertise-item,
    .social-btn {
      animation: none;
      transition: none;
    }
  }
</style>