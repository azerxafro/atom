---
export async function getStaticPaths() {
  // Define all possible venture paths
  return [
    { params: { venture: 'imagixio' } },
    { params: { venture: 'mobile' } },
    { params: { venture: 'melon' } },
    { params: { venture: 'optimus' } },
  ];
}

const { venture } = Astro.params;

const ventures = {
	imagixio: {
		title: "Atom Imagixio",
		color: "#FF6B6B"
	},
	mobile: {
		title: "Atom Mobile",
		color: "#4ECDC4"
	},
	melon: {
		title: "Atom Melon",
		color: "#FF8C94"
	},
	optimus: {
		title: "Atom Optimus",
		color: "#6C63FF"
	}
};

const ventureInfo = ventures[venture];

if (!ventureInfo) {
	return Astro.redirect('/404');
}
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<title>{ventureInfo.title} - Coming Soon</title>
		<meta name="description" content="Something awesome is in the works!" />
	</head>
	<body>
		<div class="construction-page">
			<div class="content">
				<div class="animation">
					<div class="circle"></div>
					<div class="circle"></div>
					<div class="circle"></div>
				</div>
				<h1>Oops! Still Building</h1>
				<p>Our team is cooking up something amazing! üë©‚Äçüíª‚ú®</p>
				<a href="/ventures" class="btn-back">
					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
						<line x1="19" y1="12" x2="5" y2="12"></line>
						<polyline points="12 19 5 12 12 5"></polyline>
					</svg>
					<span>Back to Ventures</span>
				</a>
			</div>
		</div>

		<style define:vars={{ ventureColor: ventureInfo.color }}>
			body {
				margin: 0;
				font-family: system-ui, sans-serif;
				background: #f5f5f5;
				min-height: 100vh;
			}

			.construction-page {
				min-height: 100vh;
				display: flex;
				align-items: center;
				justify-content: center;
				padding: 2rem;
				background: linear-gradient(135deg, var(--ventureColor), #ffffff);
			}

			.content {
				text-align: center;
				background: rgba(255, 255, 255, 0.9);
				padding: 3rem 2rem;
				border-radius: 24px;
				box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
				backdrop-filter: blur(10px);
				max-width: 500px;
				width: 100%;
			}

			.animation {
				display: flex;
				justify-content: center;
				gap: 0.5rem;
				margin-bottom: 2rem;
			}

			.circle {
				width: 20px;
				height: 20px;
				border-radius: 50%;
				background: var(--ventureColor);
				animation: bounce 0.5s ease-in-out infinite;
			}

			.circle:nth-child(2) {
				animation-delay: 0.1s;
			}

			.circle:nth-child(3) {
				animation-delay: 0.2s;
			}

			@keyframes bounce {
				0%, 100% {
					transform: translateY(0);
				}
				50% {
					transform: translateY(-10px);
				}
			}

			h1 {
				font-size: clamp(1.5rem, 5vw, 2.5rem);
				color: var(--ventureColor);
				margin: 0 0 1rem;
				font-weight: 800;
			}

			p {
				font-size: clamp(1rem, 3vw, 1.25rem);
				color: #666;
				margin: 0 0 2rem;
			}

			.btn-back {
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				padding: 1rem 2rem;
				background: var(--ventureColor);
				color: white;
				text-decoration: none;
				border-radius: 12px;
				font-weight: 600;
				font-size: 1.1rem;
				transition: all 0.3s ease;
			}

			.btn-back:hover {
				transform: translateY(-2px);
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			}

			@media (max-width: 480px) {
				.construction-page {
					padding: 1rem;
				}

				.content {
					padding: 2rem 1.5rem;
				}

				.btn-back {
					width: 100%;
					justify-content: center;
					padding: 0.875rem 1.5rem;
				}
			}

			@media (hover: none) {
				.btn-back {
					min-height: 44px;
				}

				.btn-back:hover {
					transform: none;
				}
			}
		</style>
	</body>
</html>